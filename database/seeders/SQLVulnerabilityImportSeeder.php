<?php

namespace Database\Seeders;


use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\File;
use ZipArchive;

class SQLVulnerabilityImportSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        if (DB::table('vulnerabilities')->count() == 0) {
            $this->import();
        } else {
            $this->command->info('Table already seeded, skipping.');
        }
    }

    private function import()
    {
        // Pfad zur ZIP-Datei
        $zipPath = database_path('seeds/vulnerabilities.zip');
        // Pfad zum Extrahieren der ZIP-Datei
        $extractPath = database_path('seeds/extracted');
        // Pfad zur entpackten SQL-Datei
        $sqlPath = $extractPath . '/vulnerabilities.sql';

        // ZIP-Datei entpacken
        $zip = new ZipArchive;
        if ($zip->open($zipPath) === TRUE) {
            $zip->extractTo($extractPath);
            $zip->close();
        } else {
            throw new \Exception('Failed to open ZIP file');
        }

        // Prüfen, ob die SQL-Datei existiert
        if (!File::exists($sqlPath)) {
            throw new \Exception('SQL file not found in extracted files');
        }

        // Dateiinhalt lesen
        $sql = File::get($sqlPath);

        // SQL-Statements ausführen
        DB::unprepared($sql);

        // Optional: Extrahierte Dateien löschen
        File::deleteDirectory($extractPath);
    }
}
