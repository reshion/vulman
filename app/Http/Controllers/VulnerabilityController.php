<?php

namespace App\Http\Controllers;

use App\Http\Requests\VulnerabilityStoreRequest;
use App\Http\Requests\VulnerabilityUpdateRequest;
use App\Http\Resources\VulnerabilityResource;
use App\Models\Vulnerability;
use Illuminate\Http\Request;


/** 
 * @OAS\SecurityScheme(      
 *      securityScheme="sanctum",
 *      type="http",
 *      scheme="bearer"
 * )
 */
class VulnerabilityController extends Controller
{
     /**
     * @OA\Get(
     *     path="/api/vulnerabilities",
     *     operationId="listVulnerabilities",
     *     summary="Lists vulnerabilities",
     *     tags={"Vulnerabilities"},
     *     security={{"sanctum":{}}},
     *     @OA\Parameter(
     *         name="page",
     *         in="query",
     *         description="Page number",
     *         required=false,
     *         @OA\Schema(type="integer", default=1)
     *     ),
     *     @OA\Parameter(
     *         name="count",
     *         in="query",
     *         description="Number of items per page",
     *         required=false,
     *         @OA\Schema(type="integer", default=10)
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="OK",
     *         @OA\JsonContent(ref="#/components/schemas/VulnerabilityPagingResource")
     *     )
     * )
     */
    public function index(Request $request)
    {
        $count = $request->input('count', 10);
        $vulnerabilities = Vulnerability::paginate($count);
        return VulnerabilityResource::collection($vulnerabilities);        
    }

    /**
     * @OA\Post(
     *     path="/api/vulnerabilities",
     *     operationId="storeVulnerability",
     *     tags={"Vulnerabilities"},
     *     security={{"sanctum":{}}},
     *     summary="Adds a new vulnerability",
     *     @OA\RequestBody(
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/VulnerabilityStoreRequest")
     *             
     *         )
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="OK",
     *         @OA\JsonContent(ref="#/components/schemas/VulnerabilityResource")
     *     )
     * )
     */

    public function store(VulnerabilityStoreRequest $request)
    {
        $vulnerability = Vulnerability::create($request->all());
        return new VulnerabilityResource($vulnerability);             
    }

    /**
     * @OA\Get(
     *      path="/api/vulnerabilities/{id}",
     *      tags={"Vulnerabilities"},
     *      operationId="showVulnerability",
     *      security={{"sanctum":{}}},
     *      summary="Get Vulnerability information",
     *      description="Returns Vulnerability data",
     *      @OA\Parameter(
     *          name="id",
     *          description="Vulnerability id",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\JsonContent(ref="#/components/schemas/VulnerabilityResource")
     *       )
     * )
     */
    public function show(Vulnerability $vulnerability)
    {
        return new VulnerabilityResource($vulnerability);
    }
    

    /**
     * @OA\Put(
     *      path="/api/vulnerabilities/{id}",
     *      tags={"Vulnerabilities"},
     *      operationId="updateVulnerability",
     *      security={{"sanctum":{}}},
     *      summary="Update Vulnerability information",
     *      description="Returns updated Vulnerability data",
     *     @OA\RequestBody(
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(ref="#/components/schemas/VulnerabilityStoreRequest")          
     *         )
     *     ),
     *      @OA\Parameter(
     *          name="id",
     *          description="Vulnerability id",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\JsonContent(ref="#/components/schemas/VulnerabilityResource")
     *       )
     * )
     */
    public function update(VulnerabilityUpdateRequest $request, Vulnerability $vulnerability)
    {
        $vulnerability->update($request->validated());
        return new VulnerabilityResource($vulnerability);
    }

    /**
     * @OA\Delete(
     *      path="/api/vulnerabilities/{id}",
     *      tags={"Vulnerabilities"},
     *      operationId="deleteVulnerability",
     *      security={{"sanctum":{}}},
     *      summary="Delete Vulnerability",
     *      description="Deletes a single Vulnerability",
     *      @OA\Parameter(
     *          name="id",
     *          description="Vulnerability id",
     *          required=true,
     *          in="path",
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\JsonContent(ref="#/components/schemas/VulnerabilityResource")
     *       )
     * )
     */
    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();
        return new VulnerabilityResource($vulnerability);
    }
}
